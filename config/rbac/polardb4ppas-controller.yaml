apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: polardb4mpd-controller-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - mpd.polardb.aliyun.com
    resources:
      - mpdclusters
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - mpd.polardb.aliyun.com
    resources:
      - mpdclusters/status
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims/status
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - persistentvolumes/status
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - apsaradb.aliyun.com
    resources:
      - backups
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - apsaradb.aliyun.com
    resources:
      - backupexecutes
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - apsaradb.aliyun.com
    resources:
      - backupexecutes/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotclasses
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - aliyun.com
    resources:
      - maxscaleclusters
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
      - update
  - apiGroups:
      - mpd.polardb.aliyun.com
    resources:
      - dbclustercerts
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - apsaradb.aliyun.com
    resources:
      - backuplogplans
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - innersvc.polardb.aliyun.com
    resources:
      - whiteips
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: polardb4mpd-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: polardb4mpd-controller-manager-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kube-system
---
apiVersion: v1
kind: Secret
metadata:
  name: polardb4mpd-controller-webhook-server-secret
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  name: polardb-controller-manager-nodeport
  namespace: kube-system
spec:
  type: NodePort
  ports:
    - port: 16068
      name: polardb-controller-manager-nodeport
      targetPort: 6068
      protocol: TCP
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: polardb4mpd-controller-controller-manager
  namespace: kube-system
spec:
  progressDeadlineSeconds: 20
  replicas: 3
  selector:
    matchLabels:
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  strategy:
    rollingUpdate:
      maxSurge: 5
      maxUnavailable: 5
    type: RollingUpdate
  template:
    metadata:
      labels:
        apsaradb_pod_type: db_instance_operator
        pod_port: "6068"
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
        apsara.metric.insid: "1"
        apsara.metric.ins_id: "1"
        apsara.ins.port: "0"
        apsara.metric.db_type: "polarbox-operator"
        apsara.metric.clusterName: "polarbox-operator-ins"
        apsara.metric.db_ins_type: "polarbox-operator"
        apsara.metric.exclusive: "false"
        apsara.metric.logic_custins_id: "1"
        apsara.metric.ins_name: "polarbox-operator-ins"
        apsara.metric.logic_custins_name: "polarbox-operator"
        apsara.metric.arch: "pod_arch_v1"
    spec:
      affinity:
        nodeAffinity:
          {{- if eq .Values.controllerConfig.hybridDeployment "false"}}
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: {{.Values.controllerConfig.controllerNodeLabel}}
                    operator: Exists
          {{- end}}
          # 弱亲和性，拔电会调度到非master节点
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: node.kubernetes.io/master
                    operator: In
                    values:
                      - ""
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: apsaradb_pod_type
                    operator: In
                    values:
                      - db_instance_operator
              topologyKey: kubernetes.io/hostname
      containers:
        - name: manager
          args:
            - --work-flow-meta-dir=/usr/local/rds/k8s/workflow
            - --max-concurrent-reconciles=26
            - --run-mode=polarbox
            - --feature-gates=ClusterManager=true,Backup=true,StandbySupport=false
            - --filter-operator-name=polarboxtest
            - --image-pull-policy={{ .Values.imagePullPolicy }}
            - --log-dir=/kube-log
            - --log-file=/kube-log/polardb-opt.log
            - --log-flush-frequency=2s
            - --logtostderr=false
            - --stderrthreshold=1
            - --tool-manager-image={{ .Values.images.toolmanagerImage }}
            - --event-log=false
            - --hw_check=false
            - --dbcluster-log-dir={{ .Values.dbcluster.logDir }}
            - --leader-elect-lease-duration=4s
            - --leader-elect-renew-deadline=3s
            - --leader-elect-retry-period=2s
            - -v=5
            - --exclusive_mode=true
            - --minio-url={{ .Values.minio.endpoint }}
            - --minio-https={{ .Values.minio.secure }}
            - --minio-access-key={{ .Values.minio.accesskey }}
            - --minio-secret-key={{ .Values.minio.secretkey }}
            - --enable-minor-version-upgrade=true
            - --backup-tool-max-worksize=16
            - --ins-folder-overdue-days={{ .Values.dbcluster.insFolderOverdueDays }}
          command:
            - /root/manager
          env:
            - name: apsara.log.appname
              value: polardb4mpd-controller
            - name: apsara.log.line_separator
              value: "\n"
            - name: apsara.log.dir
              value: /var/log/polardb-box/polardb-operator
            - name: apsara.log.filename_pattern
              value: polardb-workflow.txt
            - name: apsara.log.function
              value: json
            - name: apsara.log.current_limiting
              value: "false"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CURRENT_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SECRET_NAME
              value: polardb4mpd-controller-webhook-server-secret
            - name: KUBERNETES_SERVICE_HOST
              value: "{{ .Values.KUBERNETES_SERVICE_HOST }}"
            - name: KUBERNETES_SERVICE_PORT
              value: "{{ .Values.KUBERNETES_SERVICE_PORT }}"
            - name: ETCDCTL_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  key: endpoints-event
                  name: etcd-configmap
            - name: ETCDCTL_CERT
              value: /cert/client.pem
            - name: ETCDCTL_KEY
              value: /cert/client-key.pem
            - name: ETCDCTL_CACERT
              value: /cert/ca.pem
          image: {{ .Values.images.controllerImage }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          ports:
            - containerPort: 6068
              protocol: TCP
              # must less than 15 words
              name: control-http
            - containerPort: 9876
              name: webhook-server
              protocol: TCP
          livenessProbe:
            tcpSocket:
              # It is magic number see line 378: pod_port
              port: 6068
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 5
          volumeMounts:
            - mountPath: /tmp/cert
              name: cert
              readOnly: true
            - mountPath: /root/.ssh
              name: ssh-client
            - mountPath: /kube-log
              name: kube-log
            - mountPath: /cert
              name: config-etcd
            - mountPath: /var/run/docker.sock
              name: var-run-docker
            - name: temp-path
              mountPath: /var/temp-path
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: system-cluster-critical
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: polardb4mpd-controller-webhook-server-secret
        - name: ssh-client
          hostPath:
            path: /root/.ssh
        - name: kube-log
          hostPath:
            path: /var/log/polardb-box/polardb-operator
            type: DirectoryOrCreate # 如果目录不存在就创建
        - name: temp-path
          hostPath:
            path: {{ .Values.upgradePackagePath }}
            type: DirectoryOrCreate
        - name: var-run-docker
          hostPath:
            path: /var/run/docker.sock
        - name: config-etcd
          configMap:
            name: etcd-configmap
            items:
              - key: ca.pem
                path: ca.pem
              - key: client.pem
                path: client.pem
              - key: client-key.pem
                path: client-key.pem

